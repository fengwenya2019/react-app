{"version":3,"sources":["theme-context.js","theme-button.js","App.js","reportWebVitals.js","index.js"],"names":["themes","ThemeContext","React","createContext","ThemedButton","props","this","type","context","Component","contextType","Toolbar","onClick","changeTheme","App","state","theme","toggleTheme","setState","Provider","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uNAEaA,EACJ,UADIA,EAEL,UAGKC,EAAeC,IAAMC,cAChCH,G,gBCJII,E,uKAKF,IAAIC,EAAQC,KAAKD,MACjB,OAAO,cAAC,IAAD,2BAAYA,GAAZ,IAAmBE,KAAMD,KAAKE,QAA9B,yB,GANgBN,IAAMO,WAUjCL,EAAaM,YAAcT,EAEZG,QCXf,SAASO,EAAQN,GACf,OACE,cAAC,EAAD,CAAcO,QAASP,EAAMQ,c,IAgClBC,E,kDA3Bb,WAAYT,GAAQ,IAAD,8BACjB,cAAMA,IACDU,MAAQ,CACXC,MAAOhB,GAGT,EAAKiB,YAAc,WACjB,EAAKC,UAAS,SAAAH,GAAK,MAAK,CACtBC,MACED,EAAMC,QAAUhB,EACZA,EACAA,OAXO,E,qDAmBjB,OACI,cAACC,EAAakB,SAAd,CAAuBC,MAAOd,KAAKS,MAAMC,MAAzC,SACE,cAACL,EAAD,CAASE,YAAaP,KAAKW,oB,GAtBnBf,IAAMO,WCCTY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a53c6070.chunk.js","sourcesContent":["import React from 'react'\n\nexport const themes = {\n  light: 'default',\n  dark: 'primary',\n};\n\nexport const ThemeContext = React.createContext(\n  themes.dark // 默认值\n);","import React from 'react'\nimport {ThemeContext} from './theme-context'\nimport {Button} from 'antd'\n \nclass ThemedButton extends React.Component {\n  // 指定 contextType 读取当前的 theme context。\n  // React 会往上找到最近的 theme Provider，然后使用它的值。\n  // 在这个例子中，当前的 theme 值为 “dark”。\n  render() {\n    let props = this.props;\n    return <Button {...props} type={this.context}>button</Button>\n  }\n}\n\nThemedButton.contextType = ThemeContext\n\nexport default ThemedButton\n","import React from 'react'\nimport {ThemeContext, themes} from './theme-context';\nimport ThemedButton from './theme-button';\n\n// 一个使用 ThemedButton 的中间组件\nfunction Toolbar(props) {\n  return (\n    <ThemedButton onClick={props.changeTheme} />\n  );\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      theme: themes.light,\n    };\n\n    this.toggleTheme = () => {\n      this.setState(state => ({\n        theme:\n          state.theme === themes.dark\n            ? themes.light\n            : themes.dark,\n      }));\n    };\n  }\n\n  render() {\n    // 在 ThemeProvider 内部的 ThemedButton 按钮组件使用 state 中的 theme 值，\n    // 而外部的组件使用默认的 theme 值\n    return (\n        <ThemeContext.Provider value={this.state.theme}>\n          <Toolbar changeTheme={this.toggleTheme} />\n        </ThemeContext.Provider>\n    );\n  }\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'antd/dist/antd.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}